name: CI/CD Process
on:
  workflow_call:
  workflow_dispatch:

jobs:
  check-rust:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    name: Run Rust tests on ${{ matrix.os }}
    steps:
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Test native library
        run: cd native && cargo test

  build-native-library:
    needs:
      - check-rust
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    name: Build native library on ${{ matrix.os }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build native library on ${{ matrix.os }}
        run: cd native && cargo build --release
      - name: Upload artifact on ${{ matrix.os }}
        if: ${{ matrix.os  == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: native-library
          path: native/target/release/*.so
      - name: Upload artifact on ${{ matrix.os }}
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: native-library
          path: native/target/release/*.dylib
      - name: Upload artifact on ${{ matrix.os }}
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: native-library
          path: native\target\release\*.dll

  check-scala:
    needs:
      - check-rust
      - build-native-library
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        java-version:
          - 18
    runs-on: ${{ matrix.os }}
    name: Run Scala tests with JDK v${{ matrix.java-version }}, on ${{ matrix.os }}
    steps:
      - name: Setup Scala with JDK v${{ matrix.java-version }}
        uses: olafurpg/setup-scala@v14
        with:
          java-version: ${{ matrix.java-version }}
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download native artifacts
        uses: actions/download-artifact@v3
        with:
          name: native-library
      - name: Copy native library on ${{ matrix.os }}
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo cp *.so /lib
      - name: Copy native library on ${{ matrix.os }}
        if: ${{ matrix.os == 'macos-latest' }}
        run: sudo cp *.dylib /user/lib
      - name: Run Scala tests
        run: sbt test

  test-release:
    name: Test Release
    needs:
      - check-rust
      - check-scala
    runs-on: ubuntu-latest
    if: >-
      !github.event.repository.fork
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.head.repo.full_name == github.repository
      )
    concurrency:
      group: test-release-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: '17'
      - name: Sbt check publish artifacts
        run: sbt publishLocal

  release:
    if: github.event_name == 'push'
    needs:
      - check-rust
      - check-scala
      - test-release
      - build-native-library
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Setup Scala
        uses: olafurpg/setup-scala@v14
        with:
          java-version: '17'
      - name: Download native artifacts
        uses: actions/download-artifact@v3
        with:
          name: native-library
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm install
          npx semantic-release

  success:
    runs-on: ubuntu-latest
    needs:
      - check-rust
      - check-scala
      - test-release
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}